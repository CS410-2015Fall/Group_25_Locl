var React=require('react-native');
var UIImagePickerManager=require('NativeModules').UIImagePickerManager;var 


AlertIOS=












React.AlertIOS;var ScrollView=React.ScrollView;var StyleSheet=React.StyleSheet;var Text=React.Text;var TextInput=React.TextInput;var View=React.View;var ListView=React.ListView;var TouchableHighlight=React.TouchableHighlight;var ActivityIndicatorIOS=React.ActivityIndicatorIOS;var Image=React.Image;var Component=React.Component;var NavigatorIOS=React.NavigatorIOS;var AppRegistry=React.AppRegistry;

var ItemPage=React.createClass({displayName:'ItemPage',
render:function(){var _this=this;
var bottom;
if(this.state.updateItem){
bottom = 
React.createElement(View,{style:styles.buttonContainer},
React.createElement(TouchableHighlight,{style:styles.buttonBox,onPress:this.onUpdatePress},
React.createElement(Text,{style:styles.buttonText},' Update ')),


React.createElement(TouchableHighlight,{style:styles.buttonBox,onPress:this.onDeletePress},
React.createElement(Text,{style:styles.buttonText},'Delete')));}else 


{
bottom = 
React.createElement(View,{style:styles.container},

React.createElement(TouchableHighlight,{style:styles.buttonBox,onPress:this.onAddPress},
React.createElement(Text,{style:styles.buttonText},'Add')));}




return (
React.createElement(ScrollView,{style:styles.container},

React.createElement(TouchableHighlight,{onPress:this.onCameraPress},
React.createElement(Image,{source:{uri:this.state.htmlLink},style:styles.thumb})),


React.createElement(Text,{style:styles.textFieldTitle},'Name'),
React.createElement(TextInput,{
style:styles.textField,
onChangeText:function(text){return _this.setState({name:text});},
value:this.state.name}),


React.createElement(Text,{style:styles.textFieldTitle},'UPC'),
React.createElement(View,{style:styles.upcBox},
React.createElement(TextInput,{
style:styles.fieldWithButton,
onChangeText:function(text){return _this.setState({upc:text});},
value:this.state.upc}),


React.createElement(TouchableHighlight,{style:styles.buttonWithField,onPress:this.getItemDetailsByUPC},
React.createElement(Text,{style:styles.buttonText},'Check')),


React.createElement(TouchableHighlight,{style:styles.buttonWithField,onPress:this.onBarcodeCameraPress},
React.createElement(Text,{style:styles.buttonText},'Camera'))),




React.createElement(Text,{style:styles.textFieldTitle},'Quantity'),
React.createElement(TextInput,{
style:styles.textField,
onChangeText:function(text){return _this.setState({quantity:text});},
value:this.state.quantity}),


React.createElement(Text,{style:styles.textFieldTitle},'Regular Price'),
React.createElement(TextInput,{
style:styles.textField,
onChangeText:function(text){return _this.setState({regPrice:text});},
value:this.state.regPrice}),


React.createElement(Text,{style:styles.textFieldTitle},'Sale Price'),
React.createElement(TextInput,{
style:styles.textField,
onChangeText:function(text){return _this.setState({salePrice:text});},
value:this.state.salePrice}),


React.createElement(Text,{style:styles.textFieldTitle},'Description'),
React.createElement(TextInput,{
style:styles.textField,
onChangeText:function(text){return _this.setState({description:text});},
value:this.state.description}),


React.createElement(Text,{style:styles.textFieldTitle},'Start Date'),
React.createElement(TextInput,{
style:styles.textField,
onChangeText:function(text){return _this.setState({startDate:text});},
value:this.state.startDate}),


React.createElement(Text,{style:styles.textFieldTitle},'End Date'),
React.createElement(TextInput,{
style:styles.textField,
onChangeText:function(text){return _this.setState({endDate:text});},
value:this.state.endDate}),


bottom));},





getInitialState:function(){
console.log("StoreID passed to AddItem: " + this.props.StoreID);
if(this.props.ItemData){
return {
updateItem:true,
name:this.props.ItemData.Name,
upc:this.props.ItemData.UPC.toString(),
quantity:this.props.ItemData.Quantity.toString(),
regPrice:this.props.ItemData.RegPrice.toString(),
salePrice:this.props.ItemData.SalePrice.toString(),
description:this.props.ItemData.Description,
startDate:this.props.ItemData.StartDate,
endDate:this.props.ItemData.EndDate,
htmlLink:this.props.ItemData.HTMLlink,
storeID:this.props.StoreID};}else 

{
return {
name:"",
upc:"",
quantity:"",
regPrice:"",
salePrice:"",
description:"",
startDate:"",
endDate:"",
htmlLink:"http://www.indre-reisid.ee/wp-content/themes/envision/lib/images/default-placeholder.png",
storeID:this.props.StoreID};}},




getItemDetailsByUPC:function(upc){var _this2=this;
if(this.state.upc.length >= 12 && this.state.upc.match(/^\d+$/)){
fetch("http://www.searchupc.com/handlers/upcsearch.ashx?request_type=3&access_token=98A88ED2-16F7-476B-BCCF-92B44912AAF5&upc=" + this.state.upc,{method:"GET"}).
then(function(response){
var parse=JSON.parse(response._bodyText);
if(response.error){
console.log("Get Details by UPC Error: " + response.error);}else 
{
_this2.setState({
name:parse[0].productname,
regPrice:parse[0].price,
htmlLink:parse[0].imageurl});}}).

done();}},



onUpdatePress:function(){
if(this.state.name == "" || this.state.startDate == "" || this.state.endDate == "" || this.state.quantity == "" || this.state.regPrice == "" || this.state.salePrice == ""){
AlertIOS.alert("Required fields missing");}else 
{
fetch("http://ec2-54-187-51-38.us-west-2.compute.amazonaws.com/rest/db/item?app_name=loclSQL&filter=ItemID=" + this.props.ItemData.ItemID,
{method:"Put",body:JSON.stringify({
Quantity:this.state.quantity,
Name:this.state.name,
UPC:this.state.upc,
RegPrice:this.state.regularPrice,
SalePrice:this.state.salePrice,
StartDate:this.state.startDate,
EndDate:this.state.endDate,
HTMLlink:this.state.htmlLink,
Description:this.state.description})}).

then(function(responseData){
AlertIOS.alert("Item Updated");}).

done();
var StoreHome=require('./StoreHome.js');
this.props.navigator.pop({
component:StoreHome,
passProps:{StoreID:this.props.StoreID}});}},




onBarcodeCameraPress:function(){var _this3=this;
var barcodeCamera=require('./barcodeCamera.js');
this.props.navigator.push({
title:"Scan a barcode",
component:barcodeCamera,
callback:this.callbackBarcode,
leftButtonTitle:'Back',
onLeftButtonPress:function(){
_this3.props.navigator.pop();}});},




callbackBarcode:function(barcode){
console.log("UPC set to: " + barcode);
this.setState({
upc:barcode});

this.getItemDetailsByUPC();},


onAddPress:function(){
if(this.state.name == "" || this.state.startDate == "" || this.state.endDate == "" || this.state.quantity == "" || this.state.regPrice == "" || this.state.salePrice == ""){
AlertIOS.alert("Required fields missing");}else 
{
console.log("Creating item with StoreID: " + this.state.storeID);
fetch("http://ec2-54-187-51-38.us-west-2.compute.amazonaws.com/rest/db/item?app_name=loclSQL",
{method:"POST",body:JSON.stringify(
{Name:this.state.name,
Description:this.state.description,
StartDate:this.state.startDate,
EndDate:this.state.endDate,
Quantity:this.state.quantity,
RegPrice:this.state.regPrice,
SalePrice:this.state.salePrice,
UPC:this.state.upc,
StoreID:this.state.storeID,
HTMLlink:this.state.htmlLink})}).
then(function(response){return response.json();}).
then(function(responseData){
AlertIOS.alert("Item Added");}).

done();
var StoreHome=require('./StoreHome.js');
this.props.navigator.pop({
component:StoreHome,
passProps:{StoreID:this.props.StoreID}});}},




onDeletePress:function(){
fetch("http://ec2-54-187-51-38.us-west-2.compute.amazonaws.com/rest/db/item?app_name=loclSQL&filter=ItemID=" + this.props.ItemData.ItemID,{method:"DELETE"}).
then(function(response){return response.json();}).
then(function(responseData){
AlertIOS.alert("Item Deleted");}).

done();
var StoreHome=require('./StoreHome.js');
this.props.navigator.pop({
component:StoreHome,
passProps:{StoreID:this.props.StoreID}});},









onCameraPress:function(){var _this4=this;
var options={
title:'Get Picture of Item',
cancelButtonTitle:'Cancel',
takePhotoButtonTitle:'Take Photo...',
chooseFromLibraryButtonTitle:'Choose from Library...',
maxWidth:480,
maxHeight:640,
quality:0.3,
allowsEditing:true,
noData:false,
storageOptions:{
skipBackup:true,
path:'images'}};

UIImagePickerManager.showImagePicker(options,function(didCancel,response){
if(didCancel){
console.log('Image picker cancelled');}else 

{
var source={uri:'data:image/jpeg;base64,' + response.data,isStatic:true};
_this4.setState({
htmlLink:'data:image/jpeg;base64,' + response.data});}});}});








var styles=StyleSheet.create({
container:{
flex:1,
backgroundColor:"#8173c7"},

buttonContainer:{
flexDirection:'row',
alignItems:'center',
justifyContent:'space-around'},

upcBox:{
flexDirection:'row',
alignItems:'center',
justifyContent:'space-around'},

textField:{
height:40,
marginBottom:5,
marginLeft:5,
marginRight:5,
borderColor:'F5F5F5',
borderWidth:1,
paddingLeft:2,
backgroundColor:'white'},

textFieldTitle:{
margin:5,
fontSize:20,
color:'#F5F5F5',
alignSelf:'center'},

buttonText:{
color:'#F5F5F5',
fontSize:18,
alignSelf:'center'},

buttonBox:{
borderColor:'#F5F5F5',
justifyContent:'center',
alignItems:'center',
padding:10,
borderWidth:2,
borderRadius:5,
margin:20},

thumb:{
width:200,
height:200,
alignSelf:'center',
borderWidth:2,
borderColor:"#F5F5F5",
margin:10},


buttonWithField:{
borderColor:'#F5F5F5',
padding:10,
borderWidth:2,
borderRadius:5,
marginRight:5},


fieldWithButton:{
flex:2,
height:40,
marginLeft:5,
marginRight:5,
borderColor:'F5F5F5',
backgroundColor:"white",
borderWidth:1,
paddingLeft:2},


cameraContainer:{
flex:1,
justifyContent:"center",
alignItems:"center",
backgroundColor:"transparent"}});




module.exports = ItemPage;