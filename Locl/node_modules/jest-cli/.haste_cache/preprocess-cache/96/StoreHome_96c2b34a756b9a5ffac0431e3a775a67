'use strict';

var React=require('react-native');
var StoreProfile=require('./StoreProfile.js');
var bluetoothBeaconManager=require('./bluetoothBeaconManager.js');
var bluetoothScanningManager=require('./bluetoothScanningManager.js');
var serverManager=require('./serverManager.js');
var ItemPage=require('./ItemPage.js');var 


AppStateIOS=















React.AppStateIOS;var ScrollView=React.ScrollView;var StyleSheet=React.StyleSheet;var Text=React.Text;var TextInput=React.TextInput;var View=React.View;var TouchableHighlight=React.TouchableHighlight;var ActivityIndicatorIOS=React.ActivityIndicatorIOS;var Image=React.Image;var Component=React.Component;var NavigatorIOS=React.NavigatorIOS;var AppRegistry=React.AppRegistry;var AlertIOS=React.AlertIOS;var ListView=React.ListView;var DeviceEventEmitter=React.DeviceEventEmitter;var AsyncStorage=React.AsyncStorage;

var styles=StyleSheet.create({
description:{
color:'black',
backgroundColor:'white',
fontSize:30,
margin:80},

container:{
marginTop:50,
flex:1},

resultsContainer:{
flex:2},

buttonText:{
fontSize:18,
color:'white',
alignSelf:'center'},

thumb:{
width:50,
height:50,
marginRight:10},

textContainer:{
flex:1},

separator:{
height:1,
backgroundColor:'#dddddd'},

price:{
fontSize:25,
fontWeight:'bold',
color:'#48BBEC'},

title:{
fontSize:20,
color:'#656565'},

rowContainer:{
borderColor:'white',
borderWidth:1,
backgroundColor:'F5F5F5',
flexDirection:'row',
padding:10},

buttonText:{
color:'8173c7',
fontSize:18,
alignSelf:'center'},

buttonBox:{
borderColor:'#8173c7',
justifyContent:'center',
alignItems:'center',
padding:10,
borderWidth:2,
borderRadius:5,
margin:20},

customTabBar:{
flexDirection:'row',
padding:10,
alignItems:'center',
backgroundColor:'#8173c7',
justifyContent:'space-around',
alignItems:'flex-end'},

customTab:{
flexDirection:'column',
alignItems:'center',
justifyContent:'space-around'},

tabBarIcon:{
height:40,
width:40,
resizeMode:'stretch'}});



var StoreHome=React.createClass({displayName:'StoreHome',
render:function(){
this.getStoreItems(this.props.StoreID);
if(!this.state.bluetooth){
var bluetoothImage=React.createElement(Image,{style:styles.tabBarIcon,source:require('image!blueetooth-3')});}else 
{
var bluetoothImage=React.createElement(Image,{style:styles.tabBarIcon,source:require('image!blueetooth-2')});}

return (
React.createElement(View,{style:styles.container},
React.createElement(ScrollView,{
automaticallyAdjustContentInsets:false,
scrollEventThrottle:200,
style:styles.scrollView},
React.createElement(View,{style:styles.resultsContainer},

React.createElement(TouchableHighlight,{style:styles.buttonBox,onPress:this.onAddItemPress},
React.createElement(Text,{style:styles.buttonText},'Add a New Item')),


React.createElement(ListView,{
dataSource:this.state.dataSource,
renderRow:this.renderRow}))),




React.createElement(View,{style:styles.customTabBar},

React.createElement(TouchableHighlight,{style:styles.customTab},
React.createElement(Image,{style:styles.tabBarIcon,source:require('image!shop3')})),


React.createElement(TouchableHighlight,{style:styles.customTab,onPress:this.onBeaconingPress},
bluetoothImage),


React.createElement(TouchableHighlight,{style:styles.customTab,onPress:this.onCustomerPress},
React.createElement(Image,{style:styles.tabBarIcon,source:require('image!marker20')})),


React.createElement(TouchableHighlight,{style:styles.customTab,onPress:this.onSettingsPress},
React.createElement(Image,{style:styles.tabBarIcon,source:require('image!settings48')})))));},






getInitialState:function(){
console.log("StoreID passed to StoreHome: " + this.props.StoreID);
var ds=new ListView.DataSource({rowHasChanged:function(r1,r2){return r1 !== r2;}});
return {
storeID:this.props.StoreID,
dataSource:ds.cloneWithRows([]),
currentAppState:AppStateIOS.currentState,
bluetooth:false};},



componentWillMount:function(){
serverManager.auth();
bluetoothScanningManager.requestAlwaysAuthorization();
bluetoothScanningManager.getAuthorizationStatus();
AppStateIOS.addEventListener('change',this.handleAppStateChange);},


componentDidMount:function(){
this.getStoreItems(this.props.StoreID);},


getStoreItems:function(storeID){var _this=this;
fetch("http://ec2-54-187-51-38.us-west-2.compute.amazonaws.com/rest/db/" + "item" + "?app_name=loclSQL" + "&filter=StoreID=" + storeID,{method:"GET"}).
then(function(response){return response.json();}).
then(function(responseData){
if(responseData.error){
console.log("Get Store Items Error: " + responseData.error);}else 

{
if(_this.isMounted()){
_this.setState({
dataSource:_this.state.dataSource.cloneWithRows(responseData.record)});}}}).



done();},


renderRow:function(itemData){var _this2=this;
return (
React.createElement(TouchableHighlight,{underlayColor:'#AA9999',onPress:function(){return _this2.onUpdatePress(itemData);}},
React.createElement(View,{style:styles.rowContainer},
React.createElement(Image,{style:styles.thumb,source:{uri:itemData.HTMLlink}}),
React.createElement(View,{style:styles.textContainer},
React.createElement(Text,{style:styles.price},'$',itemData.SalePrice),
React.createElement(Text,{style:styles.title,numberOfLines:1},itemData.Name)))));},






handleAppStateChange:function(currentAppState){
if(this.isMounted()){
this.setState({currentAppState:AppStateIOS.currentState});}

console.log("App State: " + AppStateIOS.currentState);},


onBeaconingPress:function(){
if(this.isMounted()){
if(this.state.bluetooth === true){
bluetoothBeaconManager.onBeaconingStopPress();
AlertIOS.alert("Bluetooth Beaconing Deactivated");
this.setState({
bluetooth:false});}else 

{
bluetoothBeaconManager.onBeaconingStartPress();
AlertIOS.alert("Bluetooth Beaconing Activated");
this.setState({
bluetooth:true});}}},





onStopBeaconingPress:function(){
if(this.isMounted()){
bluetoothBeaconManager.onBeaconingStartPress();
AlertIOS.alert("Bluetooth Beaconing Activated. Bluetooth beaconing will deactivate if your phone locks, or the application is not in the foreground. For best performance, disable locking and keep the application active on the screen.");}},



onCustomerPress:function(){
console.log("Firing onCustomerPress");
var CustomerHome=require('./CustomerHome.js');
bluetoothBeaconManager.onBeaconingStopPress();
this.props.navigator.replace({
title:"Locl",
component:CustomerHome,
passProps:{StoreID:this.props.StoreID}});},



onUpdatePress:function(itemData){var _this3=this;
bluetoothBeaconManager.onBeaconingStopPress();
this.setState({
bluetooth:false});

this.props.navigator.push({
title:itemData.Name,
component:ItemPage,
passProps:{ItemData:itemData,StoreID:this.state.storeID},
leftButtonTitle:'Inventory',
onLeftButtonPress:function(){_this3.props.navigator.pop();}});},



onSettingsPress:function(){var _this4=this;
bluetoothBeaconManager.onBeaconingStopPress();
this.setState({
bluetooth:false});

this.props.navigator.push({
title:'Change Store Information',
component:StoreProfile,
passProps:{StoreID:this.state.storeID},
leftButtonTitle:'Inventory',
onLeftButtonPress:function(){_this4.props.navigator.pop();}});},



onAddItemPress:function(){var _this5=this;
bluetoothBeaconManager.onBeaconingStopPress();
this.setState({
bluetooth:false});

this.props.navigator.push({
component:ItemPage,
title:"Add a New Item",
passProps:{ItemData:'',StoreID:this.state.storeID},
leftButtonTitle:'Inventory',
onLeftButtonPress:function(){_this5.props.navigator.pop();}});}});





module.exports = StoreHome;