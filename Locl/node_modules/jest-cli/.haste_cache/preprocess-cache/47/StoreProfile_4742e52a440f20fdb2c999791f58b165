var React=require('react-native');
var UIImagePickerManager=require('NativeModules').UIImagePickerManager;
var CustomerHome=require('./CustomerHome.js');

var defaultImage="http://www.indre-reisid.ee/wp-content/themes/envision/lib/images/default-placeholder.png";var 


StyleSheet=













React.StyleSheet;var Text=React.Text;var TextInput=React.TextInput;var View=React.View;var TouchableHighlight=React.TouchableHighlight;var ActivityIndicatorIOS=React.ActivityIndicatorIOS;var Image=React.Image;var Component=React.Component;var NavigatorIOS=React.NavigatorIOS;var AppRegistry=React.AppRegistry;var ScrollView=React.ScrollView;var ListView=React.ListView;var AlertIOS=React.AlertIOS;var AsyncStorage=React.AsyncStorage;

var styles=StyleSheet.create({
container:{
flex:1,
paddingTop:20,
backgroundColor:'8173c7',
alignItems:'center',
flexDirection:'column',
justifyContent:'space-around'},

buttonContainer:{
flexDirection:'row',
justifyContent:'space-around'},

textField:{
height:40,
marginBottom:2,
marginLeft:10,
marginRight:10,
borderColor:'#F5F5F5',
backgroundColor:'white',
borderWidth:1,
paddingLeft:2},

textFieldTitle:{
marginBottom:2,
fontSize:20,
color:'#F5F5F5'},

buttonText:{
color:'F5F5F5',
fontSize:18,
alignSelf:'center'},

buttonBox:{
borderColor:'#F5F5F5',
justifyContent:'center',
alignItems:'center',
padding:10,
borderWidth:2,
borderRadius:5},

thumb:{
width:200,
height:200}});



var StoreProfile=React.createClass({displayName:'StoreProfile',

render:function(){var _this=this;
var bottom;
if(this.state.updateItem){
bottom = 
React.createElement(View,{style:styles.buttonContainer},
React.createElement(TouchableHighlight,{style:styles.buttonBox,onPress:this.onUpdatePress},
React.createElement(Text,{style:styles.buttonText},'Update')),

React.createElement(TouchableHighlight,{style:styles.buttonBox,onPress:this.onDeletePress},
React.createElement(Text,{style:styles.buttonText},'Close Store')));}else 


{
bottom = 
React.createElement(TouchableHighlight,{style:styles.buttonBox,onPress:this.onCreatePress},
React.createElement(Text,{style:styles.buttonText},'Create'));}



return (
React.createElement(View,{style:styles.container},

React.createElement(TouchableHighlight,{onPress:this.onCameraPress},
React.createElement(Image,{source:{uri:this.state.htmlLink},style:styles.thumb})),


React.createElement(Text,{style:styles.textFieldTitle},' Name '),
React.createElement(TextInput,{
style:styles.textField,
onChangeText:function(text){return _this.setState({storeName:text});},
value:this.state.storeName}),


React.createElement(Text,{style:styles.textFieldTitle},' Address '),
React.createElement(TextInput,{
style:styles.textField,
onChangeText:function(text){return _this.setState({address:text});},
value:this.state.address}),


React.createElement(Text,{style:styles.textFieldTitle},' Description '),
React.createElement(TextInput,{
style:styles.textField,
onChangeText:function(text){return _this.setState({description:text});},
value:this.state.description}),


bottom));},





getInitialState:function(){

if(this.props.StoreID){
return {
updateItem:true,
storeName:"",
address:"",
description:"",
htmlLink:defaultImage,
storeID:this.props.StoreID};}else 

{
return {
storeID:"",
storeName:"",
address:"",
description:"",
htmlLink:defaultImage,
storeID:""};}},




componentWillMount:function(){
if(this.props.StoreID){
this.getStoreDetails(this.props.StoreID);}},



onUpdatePress:function(){
if(this.state.storeName == "" || this.state.address == "" || this.state.htmlLink == ""){
AlertIOS.alert("Required fields missing");}else 
{
fetch("http://ec2-54-187-51-38.us-west-2.compute.amazonaws.com/rest/db/Store?app_name=loclSQL&filter=StoreID=" + this.state.storeID,
{method:"PUT",body:JSON.stringify({
Address:this.state.address,
StoreName:this.state.storeName,
Description:this.state.description,
StoreHTMLimg:this.state.htmlLink,
Transmitting:true})}).
then(function(response){return response.json();}).
then(function(responseData){
AlertIOS.alert("Store Updated");}).

done();
this.props.navigator.pop();}},



onCreatePress:function(){var _this2=this;
var StoreHome=require('./StoreHome.js');
if(this.state.storeName == "" || this.state.address == "" || this.state.htmlLink == ""){
AlertIOS.alert("Required fields missing");}else 
{
fetch("http://ec2-54-187-51-38.us-west-2.compute.amazonaws.com/rest/db/store?app_name=loclSQL",
{method:"POST",body:JSON.stringify({
StoreName:this.state.storeName,
Address:this.state.address,
Description:this.state.description,
Transmitting:true,
StoreHTMLimg:this.state.htmlLink})}).
then(function(response){return response.json();}).
then(function(responseData){
AlertIOS.alert("Store Created");
_this2.storeStoreID(responseData.StoreID);
_this2.setState({
storeID:responseData.StoreID});

_this2.props.navigator.replace({
title:"Locl",
component:StoreHome,
passProps:{StoreID:responseData.StoreID}});}).


done();}},




storeStoreID:function callee$0$0(newStoreID){return regeneratorRuntime.async(function callee$0$0$(context$1$0){while(1) switch(context$1$0.prev = context$1$0.next){case 0:context$1$0.prev = 0;context$1$0.next = 3;return regeneratorRuntime.awrap(

AsyncStorage.setItem('StoreID',newStoreID.toString()));case 3:
console.log('StoreID ' + newStoreID + ' newStoreID');context$1$0.next = 9;break;case 6:context$1$0.prev = 6;context$1$0.t0 = context$1$0['catch'](0);

console.log('AsyncStorage error (storeStoreID): ' + context$1$0.t0.message);case 9:case 'end':return context$1$0.stop();}},null,this,[[0,6]]);},



removeStoreID:function callee$0$0(newStoreID){return regeneratorRuntime.async(function callee$0$0$(context$1$0){while(1) switch(context$1$0.prev = context$1$0.next){case 0:context$1$0.prev = 0;context$1$0.next = 3;return regeneratorRuntime.awrap(

AsyncStorage.removeItem('StoreID'));case 3:
console.log('StoreID ' + newStoreID + ' removed');context$1$0.next = 9;break;case 6:context$1$0.prev = 6;context$1$0.t0 = context$1$0['catch'](0);

console.log('AsyncStorage error (removeStoreID): ' + context$1$0.t0.message);case 9:case 'end':return context$1$0.stop();}},null,this,[[0,6]]);},



onDeletePress:function(){var _this3=this;
fetch("http://ec2-54-187-51-38.us-west-2.compute.amazonaws.com/rest/db/Store?app_name=loclSQL&filter=StoreID=" + this.state.storeID,
{method:"DELETE"}).
then(function(response){return response.json();}).
then(function(responseData){
AlertIOS.alert("Closed Store");
_this3.removeStoreID(_this3.state.StoreID);}).

done();
this.props.navigator.replace({
component:CustomerHome});},



getStoreDetails:function(storeID){var _this4=this;
fetch("http://ec2-54-187-51-38.us-west-2.compute.amazonaws.com/rest/db/store?app_name=loclSQL&filter=StoreID=" + storeID.toString(),{method:"GET"}).
then(function(response){return response.json();}).
then(function(responseData){
if(responseData.error){
console.log("Get Store Details Error: " + responseData.error);}else 

{
console.log("Is object: " + typeof responseData.record[0]);
if(typeof responseData.record[0] != 'object'){
return;}else 
{
_this4.setState({
storeName:responseData.record[0].StoreName,
address:responseData.record[0].Address,
description:responseData.record[0].Description,
htmlLink:responseData.record[0].StoreHTMLimg});}}}).

done();},








onCameraPress:function(){var _this5=this;
var options={
title:'Get Picture of Item',
cancelButtonTitle:'Cancel',
takePhotoButtonTitle:'Take Photo...',
chooseFromLibraryButtonTitle:'Choose from Library...',
maxWidth:480,
maxHeight:640,
quality:0.3,
allowsEditing:true,
noData:false,
storageOptions:{
skipBackup:true,
path:'images'}};

UIImagePickerManager.showImagePicker(options,function(didCancel,response){
if(didCancel){
console.log('Image Picker Cancelled');}else 

{
var source={uri:'data:image/jpeg;base64,' + response.data,isStatic:true};
_this5.setState({
htmlLink:'data:image/jpeg;base64,' + response.data});}});}});








module.exports = StoreProfile;