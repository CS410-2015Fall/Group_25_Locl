'use strict';

var React=require('react-native');var 


StyleSheet=










React.StyleSheet;var Text=React.Text;var TextInput=React.TextInput;var View=React.View;var ListView=React.ListView;var TouchableHighlight=React.TouchableHighlight;var ActivityIndicatorIOS=React.ActivityIndicatorIOS;var Image=React.Image;var Component=React.Component;var NavigatorIOS=React.NavigatorIOS;var AppRegistry=React.AppRegistry;

var styles=StyleSheet.create({
description:{
color:'black',
backgroundColor:'white',
fontSize:30,
margin:80},

container:{
flex:1},

flowRight:{
flexDirection:'column',
alignItems:'center',
alignSelf:'stretch'},

buttonText:{
fontSize:18,
color:'white',
alignSelf:'center'},

button:{
height:20,
flex:1,
flexDirection:'row',
backgroundColor:'#48BBEC',
borderColor:'#48BBEC',
borderWidth:1,
borderRadius:8,
marginBottom:10,
alignSelf:'stretch',
justifyContent:'center'},

thumb:{
width:80,
height:80,
marginRight:10},

textContainer:{
flex:1},

separator:{
height:1,
backgroundColor:'#dddddd'},

price:{
fontSize:25,
fontWeight:'bold',
color:'#48BBEC'},

title:{
fontSize:20,
color:'#656565'},

rowContainer:{
flexDirection:'row',
padding:10}});



var StorePage=React.createClass({displayName:'StorePage',
render:function(){
return (
React.createElement(View,{style:styles.container},
React.createElement(ListView,{
dataSource:this.state.dataSource,
renderRow:this.renderRow})));},




getInitialState:function(){
var ds=new ListView.DataSource({rowHasChanged:function(r1,r2){return r1 !== r2;}});
return {
storeID:this.props.StoreID,
dataSource:ds.cloneWithRows([])};},
















renderRow:function(itemData){
return (
React.createElement(View,null,
React.createElement(View,{style:styles.rowContainer},
React.createElement(Image,{style:styles.thumb,source:{uri:itemData.HTMLlink}}),
React.createElement(View,{style:styles.textContainer},
React.createElement(Text,{style:styles.price},'$',itemData.SalePrice),
React.createElement(Text,{style:styles.title,
numberOfLines:1},itemData.Name))),


React.createElement(View,{style:styles.separator})));},




componentWillMount:function(){
this.getStoreItems();},


getStoreItems:function(){var _this=this;
fetch("http://ec2-54-187-51-38.us-west-2.compute.amazonaws.com/rest/db/" + "item" + "?app_name=loclSQL" + "&filter=StoreID=" + this.props.StoreID,{method:"GET"}).
then(function(response){return response.json();}).
then(function(responseData){
if(responseData.error){
console.log("Error!");
console.log(responseData.error);}else 

{
_this.setState({
dataSource:_this.state.dataSource.cloneWithRows(responseData.record)});}}).



done();}});



module.exports = StorePage;