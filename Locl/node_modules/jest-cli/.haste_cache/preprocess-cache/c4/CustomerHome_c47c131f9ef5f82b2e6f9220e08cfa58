'use strict';

var React=require('react-native');
var StorePage=require('./StorePage');
var bluetoothScanningManager=require('./bluetoothScanningManager.js');
var cacheManager=require('./cacheManager.js');
var serverManager=require('./serverManager.js');
var PreferenceProfile=require('./PreferenceProfile.js');var 


AlertIOS=













React.AlertIOS;var AppStateIOS=React.AppStateIOS;var StyleSheet=React.StyleSheet;var Text=React.Text;var TextInput=React.TextInput;var View=React.View;var TouchableHighlight=React.TouchableHighlight;var ActivityIndicatorIOS=React.ActivityIndicatorIOS;var Image=React.Image;var Component=React.Component;var NavigatorIOS=React.NavigatorIOS;var AppRegistry=React.AppRegistry;var ListView=React.ListView;var DeviceEventEmitter=React.DeviceEventEmitter;

var styles=StyleSheet.create({
buttonText:{
fontSize:18,
color:'white',
alignSelf:'center'},

button:{
height:20,
flex:1,
flexDirection:'row',
backgroundColor:'#48BBEC',
borderColor:'#48BBEC',
borderWidth:1,
borderRadius:8,
marginBottom:10,
alignSelf:'stretch',
justifyContent:'center'},

instructionsText:{
fontSize:20},

labelContainer:{
flexDirection:'row',
width:300},

labelText:{
paddingRight:10,
fontSize:18},

buttonContainer:{
flexDirection:'row',
justifyContent:'center',
alignItems:'center',
marginTop:20},

touchableHighlight:{
marginLeft:10,
marginRight:10},

outputContainer:{
width:300,
height:200,
justifyContent:'center',
alignItems:'center',
borderWidth:.5,
borderColor:"#999999",
marginTop:20},

row:{
padding:8,
paddingBottom:16},

saved:{
fontSize:20,
textAlign:"center",
margin:10},

container:{
flex:1,
marginTop:50},

thumb:{
width:80,
height:80,
marginRight:10},

textContainer:{
flex:1},

separator:{
height:1,
backgroundColor:'#dddddd'},

price:{
fontSize:25,
fontWeight:'bold',
color:'#48BBEC'},

title:{
fontSize:20,
color:'#656565'},

rowContainer:{
flexDirection:'row',
padding:10},


customTabBar:{
flexDirection:'row',
padding:10,
alignItems:'center',
backgroundColor:'#8173c7',
justifyContent:'space-around',
alignItems:'flex-end'},

customTab:{
flexDirection:'column',
alignItems:'center',
justifyContent:'space-around'},

tabBarIcon:{
height:40,
width:40,
resizeMode:'stretch'}});




var CustomerHome=React.createClass({displayName:'CustomerHome',

getInitialState:function(){
console.log("CustomerID passed to CustomerHome: " + this.props.CustomerID);
console.log("StoreID passed to CustomerHome: " + this.props.StoreID);
var ds=new ListView.DataSource({rowHasChanged:function(r1,r2){return r1 !== r2;}});
return {
dataSource:ds.cloneWithRows([]),
minors:[],
currentAppState:AppStateIOS.currentState,
storeID:this.props.StoreID,
customerID:this.props.CustomerID};},



componentWillMount:function(){

serverManager.auth();
bluetoothScanningManager.requestAlwaysAuthorization();
bluetoothScanningManager.getAuthorizationStatus();
bluetoothScanningManager.setupStatusSubscription();
bluetoothScanningManager.startMonitoringForRegion();
bluetoothScanningManager.startUpdatingLocation();},



componentDidMount:function(){var _this=this;


AppStateIOS.addEventListener('change',this.handleAppStateChange);


bluetoothScanningManager.setupStopSubscription();


bluetoothScanningManager.setupRestartSubscription();


bluetoothScanningManager.startRangingBeaconsInRegion();


var startSubscription=DeviceEventEmitter.addListener(
'beaconsDidRange',
function(data){
console.log("Beacons: " + data.beacons.length);
if(data.beacons.length > 0){

var minors=Object.keys(data.beacons).map(function(f){return data.beacons[f].minor;});
if(JSON.stringify(minors) !== JSON.stringify(_this.state.minors)){
console.log("Minors do not equal");

for(var i=0;i < data.beacons.length;i++) {
if(i == 0){
var storeRequestString="http://ec2-54-187-51-38.us-west-2.compute.amazonaws.com/rest/db/store?app_name=loclSQL&filter=StoreID=" + data.beacons[i].minor;}else 
{
storeRequestString += "||StoreID=" + data.beacons[i].minor;}}

;

fetch(storeRequestString,{method:"GET"}).
then(function(response){return response.json();}).
then(function(responseData){
if(responseData.error){
console.log("Error: " + responseData.error);}else 

{
_this.setState({
dataSource:_this.state.dataSource.cloneWithRows(responseData.record),
minors:minors});}}).

done();}}else 

{
_this.setState({
dataSource:_this.state.dataSource.cloneWithRows([]),
minors:[]});}});},





render:function(){
return (
React.createElement(View,{style:styles.container},
React.createElement(ListView,{
dataSource:this.state.dataSource,
renderRow:this.renderStore}),


React.createElement(View,{style:styles.customTabBar},

React.createElement(TouchableHighlight,{style:styles.customTab,onPress:this.onStorePress},
React.createElement(Image,{style:styles.tabBarIcon,source:require('image!shop3-2')})),


React.createElement(TouchableHighlight,{style:styles.customTab},
React.createElement(Image,{style:styles.tabBarIcon,source:require('image!marker20-2')})),


React.createElement(TouchableHighlight,{style:styles.customTab,onPress:this.onPreferencePress},
React.createElement(Image,{style:styles.tabBarIcon,source:require('image!settings48')})))));},







renderStore:function(store){var _this2=this;
return (
React.createElement(TouchableHighlight,{underlayColor:'#AA9999',onPress:function(){return _this2.rowPressed(store);}},
React.createElement(View,null,
React.createElement(View,{style:styles.rowContainer},
React.createElement(Image,{style:styles.thumb,source:{uri:store.StoreHTMLimg}}),
React.createElement(View,{style:styles.textContainer},
React.createElement(Text,{style:styles.title,
numberOfLines:1},store.StoreName))),


React.createElement(View,{style:styles.separator}))));},





componentWillUnmount:function(){
AppStateIOS.removeEventListener('change',this.handleAppStateChange);},


handleAppStateChange:function(currentAppState){
this.setState({currentAppState:AppStateIOS.currentState});},









onStorePress:function(){
if(this.state.storeID == ""){
var StoreProfile=require('./StoreProfile.js');
AlertIOS.alert("You have not setup a store. You will now be directed to the store Setup Page");
bluetoothScanningManager.stopRangingBeaconsInRegion();
this.props.navigator.push({
component:StoreProfile});}else 

{
var StoreHome=require('./StoreHome.js');
bluetoothScanningManager.stopRangingBeaconsInRegion();
this.props.navigator.replace({
title:"Locl",
component:StoreHome,
passProps:{StoreID:this.state.storeID}});}},




onPreferencePress:function(){var _this3=this;
bluetoothScanningManager.stopRangingBeaconsInRegion();
this.props.navigator.push({
title:"Preference Manager",
component:PreferenceProfile,
passProps:{CustomerID:this.state.customerID},
leftButtonTitle:'Locl',
onLeftButtonPress:function(){_this3.props.navigator.pop(),bluetoothScanningManager.startRangingBeaconsInRegion();}});},



rowPressed:function(store){var _this4=this;

bluetoothScanningManager.stopRangingBeaconsInRegion();
this.props.navigator.push({
title:store.StoreName,
component:StorePage,
passProps:{StoreID:store.StoreID},
leftButtonTitle:'Back to Store',
onLeftButtonPress:function(){_this4.props.navigator.pop(),bluetoothScanningManager.startRangingBeaconsInRegion();}});}});





module.exports = CustomerHome;