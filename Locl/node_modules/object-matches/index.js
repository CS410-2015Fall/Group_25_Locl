var deeper = require('deeper')
var shallower = require('only-shallow')

// extracted from tap/lib/assert.js

function match (f, w) {
  var eq
  if (f && typeof f === 'object' && typeof w === 'object')
    eq = equivalent(selectFields(f, w), w, false)
  else
    eq = f === w

  return eq
}

function equivalent (f, w, strict) {
  if (strict)
    return deeper(f, w)
  else
    return shallower(f, w)
}

function selectFields (a, b) {
  // get the values in A of the fields in B
  var ret = Array.isArray(b) ? [] : {}
  Object.keys(b).forEach(function (k) {
    var v = b[k]
      , av = a[k]
    if (v && av && typeof v === "object" && typeof av === "object"
        && !(Buffer.isBuffer(v))
        && !(v instanceof Date)
        && !(v instanceof RegExp)
        && !(v instanceof String)
        && !(v instanceof Boolean)
        && !(v instanceof Number)
        && !(Array.isArray(v))) {
      ret[k] = selectFields(av, v)
    } else
      ret[k] = av
  })
  return ret
}

module.exports = match
